name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Configure MSVC for amd64
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: amd64

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v2
      with:
        msbuild-architecture: x64

    - name: Clone Tencent/mars
      run: git clone --depth 1 https://github.com/Tencent/mars.git

    - name: Apply local patches
      shell: pwsh
      run: |
        Copy-Item src_patches/CMakeLists.txt   mars/mars/CMakeLists.txt                  -Force
        Copy-Item src_patches/build_windows.py mars/mars/build_windows.py                -Force
        Copy-Item src_patches/positioning.hpp  mars/mars/boost/iostreams/positioning.hpp -Force

    - name: Detect MSVC paths & build (Release, nonâ€‘incremental)
      shell: pwsh
      run: |
        $libPath      = (where.exe lib.exe      | Select-Object -First 1)
        $vsDevCmdPath = (where.exe VsDevCmd.bat | Select-Object -First 1)

        Write-Host "lib.exe       => $libPath"
        Write-Host "VsDevCmd.bat  => $vsDevCmdPath"

        $env:MSVC_BIN_HOST64_PATH = Split-Path (Split-Path $libPath -Parent) -Parent
        $env:MSVC_TOOLS_PATH      = Split-Path $vsDevCmdPath -Parent

        Write-Host "MSVC_BIN_HOST64_PATH = $env:MSVC_BIN_HOST64_PATH"
        Write-Host "MSVC_TOOLS_PATH      = $env:MSVC_TOOLS_PATH"

        Set-Location mars/mars
        python .\build_windows.py --mars --config Release --incremental False

    - name: Zip build output
      shell: pwsh
      run: |
        Compress-Archive -Path 'mars/mars/cmake_build/Windows/Windows.out/*' `
                        -DestinationPath windows_out.zip -Force

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows_out
        path: windows_out.zip
        retention-days: 1
