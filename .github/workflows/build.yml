name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    env:
      MSVC_BIN_HOST64_PATH: 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.43.34808\bin\Hostx64'
      MSVC_TOOLS_PATH:   'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools'

    steps:
    - uses: actions/checkout@v4

    - name: Configure MSVC for amd64
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: amd64

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v2
      with:
        msbuild-architecture: x64

    - name: Clone Tencent/mars
      run: git clone --depth 1 https://github.com/Tencent/mars.git

    - name: Apply local patches
      shell: pwsh
      run: |
        Copy-Item src_patches/CMakeLists.txt             mars/mars/CMakeLists.txt             -Force
        Copy-Item src_patches/build_windows.py           mars/mars/build_windows.py           -Force
        Copy-Item src_patches/positioning.hpp            mars/mars/boost/iostreams/positioning.hpp -Force

    - name: Build (Release, nonâ€‘incremental)
      shell: pwsh
      working-directory: mars/mars
      run: python .\build_windows.py --mars --config Release --incremental False

    - name: Zip build output
      shell: pwsh
      run: |
        Compress-Archive -Path 'mars/mars/cmake_build/Windows/Windows.out/*' `
                        -DestinationPath windows_out.zip -Force

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows_out
        path: windows_out.zip
        retention-days: 1
